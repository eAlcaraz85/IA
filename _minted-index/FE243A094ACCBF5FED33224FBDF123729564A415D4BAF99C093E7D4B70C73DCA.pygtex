\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{pandas} \PYG{k}{as} \PYG{n+nn}{pd}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn.model\PYGZus{}selection} \PYG{k+kn}{import} \PYG{n}{train\PYGZus{}test\PYGZus{}split}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn.tree} \PYG{k+kn}{import} \PYG{n}{DecisionTreeClassifier}\PYG{p}{,} \PYG{n}{export\PYGZus{}graphviz}
\PYG{k+kn}{import} \PYG{n+nn}{graphviz}

\PYG{c+c1}{\PYGZsh{} Cargar el dataset}
\PYG{n}{file\PYGZus{}path} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}phaser.csv\PYGZsq{}}
\PYG{n}{dataset} \PYG{o}{=} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{read\PYGZus{}csv}\PYG{p}{(}\PYG{n}{file\PYGZus{}path}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Eliminar columnas innecesarias (como la vacía \PYGZdq{}Unnamed: 3\PYGZdq{})}
\PYG{c+c1}{\PYGZsh{}dataset = dataset.drop(columns=[\PYGZsq{}Unnamed: 3\PYGZsq{}])}

\PYG{c+c1}{\PYGZsh{} Definir características (X) y etiquetas (y)}
\PYG{n}{X} \PYG{o}{=} \PYG{n}{dataset}\PYG{o}{.}\PYG{n}{iloc}\PYG{p}{[:,} \PYG{p}{:}\PYG{l+m+mi}{2}\PYG{p}{]}  \PYG{c+c1}{\PYGZsh{} Las dos primeras columnas son las características}
\PYG{n}{y} \PYG{o}{=} \PYG{n}{dataset}\PYG{o}{.}\PYG{n}{iloc}\PYG{p}{[:,} \PYG{l+m+mi}{2}\PYG{p}{]}   \PYG{c+c1}{\PYGZsh{} La tercera columna es la etiqueta}

\PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{X}\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{} Dividir los datos en conjunto de entrenamiento y prueba}
\PYG{n}{X\PYGZus{}train}\PYG{p}{,} \PYG{n}{X\PYGZus{}test}\PYG{p}{,} \PYG{n}{y\PYGZus{}train}\PYG{p}{,} \PYG{n}{y\PYGZus{}test} \PYG{o}{=} \PYG{n}{train\PYGZus{}test\PYGZus{}split}\PYG{p}{(}\PYG{n}{X}\PYG{p}{,} \PYG{n}{y}\PYG{p}{,} \PYG{n}{test\PYGZus{}size}\PYG{o}{=}\PYG{l+m+mf}{0.2}\PYG{p}{,} \PYG{n}{random\PYGZus{}state}\PYG{o}{=}\PYG{l+m+mi}{42}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Crear el clasificador de Árbol de Decisión}
\PYG{n}{clf} \PYG{o}{=} \PYG{n}{DecisionTreeClassifier}\PYG{p}{()}

\PYG{c+c1}{\PYGZsh{} Entrenar el modelo}
\PYG{n}{clf}\PYG{o}{.}\PYG{n}{fit}\PYG{p}{(}\PYG{n}{X\PYGZus{}train}\PYG{p}{,} \PYG{n}{y\PYGZus{}train}\PYG{p}{)}


\PYG{n}{y\PYGZus{}predict} \PYG{o}{=} \PYG{n}{clf}\PYG{o}{.}\PYG{n}{predict}\PYG{p}{(}\PYG{n}{X\PYGZus{}test}\PYG{p}{)}

\PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{X\PYGZus{}test}\PYG{p}{,} \PYG{n}{y\PYGZus{}predict}\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{} Exportar el árbol de decisión en formato DOT para su visualización}
\PYG{n}{dot\PYGZus{}data} \PYG{o}{=} \PYG{n}{export\PYGZus{}graphviz}\PYG{p}{(}\PYG{n}{clf}\PYG{p}{,} \PYG{n}{out\PYGZus{}file}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{,}
                           \PYG{n}{feature\PYGZus{}names}\PYG{o}{=}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}Feature 1\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Feature 2\PYGZsq{}}\PYG{p}{],}
                           \PYG{n}{class\PYGZus{}names}\PYG{o}{=}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}Clase 0\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}Clase 1\PYGZsq{}}\PYG{p}{],}
                           \PYG{n}{filled}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n}{rounded}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{,}
                           \PYG{n}{special\PYGZus{}characters}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Crear el gráfico con graphviz}
\PYG{n}{graph} \PYG{o}{=} \PYG{n}{graphviz}\PYG{o}{.}\PYG{n}{Source}\PYG{p}{(}\PYG{n}{dot\PYGZus{}data}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Mostrar el gráfico}
\PYG{n}{graph}\PYG{o}{.}\PYG{n}{view}\PYG{p}{()}

\end{Verbatim}
